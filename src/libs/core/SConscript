import os

from SCons.Environment import Environment
from build_scripts.utility import GlobRecursive, FindIndex, IsFileName


Import('TARGET_ENVIRONMENT')
TARGET_ENVIRONMENT: Environment

env = TARGET_ENVIRONMENT.Clone()
env.Append(
    LINKFLAGS = [
        '-Wl,-T', env.File('linker.ld').srcnode().path,
        '-Wl,-Map=' + env.File('kernel.map').path
    ],
    CPATH = [ env.Dir('.').srcnode() ],
    CPPPATH = [ 
        env.Dir('.').srcnode(), 
        env['ROOTDIR'].Dir('src/libs').srcnode()
    ],
    ASFLAGS = [ '-I', env.Dir('.').srcnode(), '-f', 'elf' ]
)

sources = GlobRecursive(env, '*.c') + \
          GlobRecursive(env, '*.cpp') + \
          GlobRecursive(env, '*.asm')

objects = env.Object(sources)

libcore = env.StaticLibrary('libcore.lib', objects)

Export('libcore')
